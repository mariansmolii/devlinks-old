name: client-server-ci

on:
  push:
    branches:
      - main
    paths:
      - "client/**"
      - "server/**"
  pull_request:
    branches:
      - main
    paths:
      - "client/**"
      - "server/**"
    types: [opened, synchronize]

jobs:
  detect_changes:
    name: detect changes
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      packages: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Paths Changes Filter
        uses: dorny/paths-filter@v3.0.2
        id: filter
        with:
#          predicate-quantifier: "every"
          filters: |
            client:
              - "client/"
              - "!client/.gitignore"
              - "!client/*.md"
              - "!client/.env.example"
              - "!client/Dockerfile.dev"
              - "!client/.dockerignore"
            server: 
              - "server/"
              - "!server/.gitignore"
              - "!server/*.md"
              - "!server/.env.example"
              - "!server/Dockerfile.dev"
              - "!server/.dockerignore"
  build:
    name: test and build
    needs: detect_changes
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJSON(needs.detect_changes.outputs.packages) }}
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: "22"
      WORKDIR: ${{ matrix.package }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: ${{ env.WORKDIR }}/package-lock.json

      - name: Install dependencies
        run: npm install
        working-directory: ${{ env.WORKDIR }}

      - name: Lint and test
        run: |
          npm run lint
          echo "npm run test"
        working-directory: ${{ env.WORKDIR }}

      - name: Build
        if: ${{ matrix.package == 'client' }}
        run: npm run build
        working-directory: ${{ env.WORKDIR }}

      - name: Set up QEMU
#        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
#        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
#        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
#        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.package }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/devlinks-${{ matrix.package }}:v${{ github.run_number }}
          build-args: |
            VITE_BACKEND_URL=${{ secrets.VITE_BACKEND_URL }}
            VITE_FRONTEND_URL=${{ secrets.VITE_FRONTEND_URL }}
