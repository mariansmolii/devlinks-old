name: client-server-ci

on:
  push:
    branches:
      - main
    paths:
      - "client/**"
      - "server/**"
  pull_request:
    branches:
      - main
    paths:
      - "client/**"
      - "server/**"
    types: [opened, synchronize]

jobs:
  build:
    name: test and build
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read

    # outputs:
    #   client: ${{ steps.filter.outputs.client }}
    #   server: ${{ steps.filter.outputs.server }}

    strategy:
      matrix:
        target: [client, server]

    env:
      NODE_VERSION: "22"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Paths Changes Filter
        uses: dorny/paths-filter@v3.0.2
        id: filter
        with:
          predicate-quantifier: "every"
          filters: |
            client:
              - "client/**"
              - "!client/.gitignore"
              - "!client/*.md"
              - "!client/.env.example"
              - "!client/Dockerfile.dev"
              - "!client/.dockerignore"
            server: 
              - "server/**"
              - "!server/.gitignore"
              - "!server/*.md"
              - "!server/.env.example"
              - "!server/Dockerfile.dev"
              - "!server/.dockerignore"

      - name: Install node
        if: ${{ matrix.target == 'client' && needs.build.outputs.client == 'true' || matrix.target == 'server' && needs.build.outputs.server == 'true' }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: ${{ matrix.target }}/package-lock.json

      - name: Install dependencies
        if: ${{ matrix.target == 'client' && needs.build.outputs.client == 'true' || matrix.target == 'server' && needs.build.outputs.server == 'true' }}
        run: npm install
        working-directory: ${{ matrix.target }}

      - name: Lint and test
        if: ${{ matrix.target == 'client' && needs.build.outputs.client == 'true' || matrix.target == 'server' && needs.build.outputs.server == 'true' }}
        run: |
          npm run lint
          echo "npm run test"
        working-directory: ${{ matrix.target }}

      - name: Build
        if: steps.filter.outputs.client == 'true'
        run: npm run build
        working-directory: client

  docker:
    name: Build and push

    needs: [build]
    if: ${{ github.ref == 'refs/heads/main' && (needs.build.outputs.client == 'true' || needs.build.outputs.server == 'true') }}

    runs-on: ubuntu-latest

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push client
        if: needs.build.outputs.client == 'true'
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}:client"
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/devlinks-test-client:v${{ github.run_number }}
          build-args: |
            VITE_BACKEND_URL=${{ secrets.VITE_BACKEND_URL }}
            VITE_FRONTEND_URL=${{ secrets.VITE_FRONTEND_URL }}

      - name: Build and push server
        if: needs.build.outputs.server == 'true'
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}:server"
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/devlinks-test-server:v${{ github.run_number }}
